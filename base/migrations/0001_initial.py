# Generated by Django 2.1.7 on 2019-06-03 05:43

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Nom')),
            ],
            options={
                'verbose_name': 'Catégorie',
            },
        ),
        migrations.CreateModel(
            name='Household',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Nom qui apparaitra dans la liste des comptes pour faire ses achats', max_length=200, verbose_name='nom du foyer')),
                ('address', models.CharField(blank=True, help_text='Pas indispensable mais pratique quand on fait des réunions chez les uns les autres', max_length=200, verbose_name='adresse')),
                ('comment', models.TextField(blank=True, verbose_name='commentaire')),
                ('account', models.DecimalField(decimal_places=2, default=0, editable=False, max_digits=10, verbose_name='solde du compte')),
                ('date', models.DateField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Foyer',
            },
        ),
        migrations.CreateModel(
            name='LocalSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('min_account', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name="seuil en dessous duquel on ne peut plus faire d'achat (en €)")),
                ('txt_home', models.TextField(blank=True, default='<i>Bienvenu au GASE</i>', verbose_name="texte de la page d'accueil (doit être donnée en code html)")),
                ('mail_admin', models.EmailField(blank=True, max_length=254, null=True, verbose_name="mail de l'admin à qui sont reporté les erreurs du logiciel")),
            ],
            options={
                'verbose_name': 'Réglages divers',
            },
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='nom')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='email')),
                ('tel', models.CharField(blank=True, max_length=200, verbose_name='numéro de téléphone')),
                ('receipt', models.BooleanField(default=True, verbose_name='recevoir un ticket de caisse par mail ?')),
                ('stock_alert', models.BooleanField(default=True, verbose_name='recevoir les approvisionnements et les alertes stock par mail ? (uniquement pour les référents produit)')),
                ('household', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='has_household', to='base.Household', verbose_name='foyer')),
            ],
            options={
                'verbose_name': 'Membre',
            },
        ),
        migrations.CreateModel(
            name='Operation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Opération',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='nom')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name="prix à l'unité (kg/L/...)")),
                ('pwyw', models.BooleanField(default=False, help_text='Pas encore géré par le logiciel ...', verbose_name='prix libre')),
                ('vrac', models.BooleanField(help_text="Cocher si le produit n'est vendu qu'à l'unité entière (bouteille/sachet/...)", verbose_name='Vrac')),
                ('visible', models.BooleanField(default=True, help_text="Une référence non visible n'apparait pas dans les produits que l'on peut acheter, on l'utilise généralement pour les produits en rupture de stock", verbose_name='vible')),
                ('comment', models.TextField(blank=True, verbose_name='commentaire')),
                ('stock', models.DecimalField(decimal_places=3, default=0, editable=False, max_digits=15, verbose_name='stock')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.Category', verbose_name='catégorie')),
            ],
            options={
                'verbose_name': 'Produit',
            },
        ),
        migrations.CreateModel(
            name='Provider',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='nom')),
                ('contact', models.TextField(blank=True, verbose_name='mail / téléphone / adresse du fournisseur')),
                ('comment', models.TextField(blank=True, verbose_name='commentaire (quel Gasier a été en contact, historique des échanges, ...)')),
            ],
            options={
                'verbose_name': 'Fournisseur',
            },
        ),
        migrations.CreateModel(
            name='ApproCompteOp',
            fields=[
                ('operation_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='base.Operation')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('household', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='base.Household')),
            ],
            bases=('base.operation',),
        ),
        migrations.CreateModel(
            name='ChangeStockOp',
            fields=[
                ('operation_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='base.Operation')),
                ('quantity', models.DecimalField(decimal_places=3, max_digits=15)),
                ('price', models.DecimalField(decimal_places=3, max_digits=15)),
            ],
            bases=('base.operation',),
        ),
        migrations.AddField(
            model_name='product',
            name='provider',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.Provider', verbose_name='fournisseur'),
        ),
        migrations.AddField(
            model_name='product',
            name='referent',
            field=models.ForeignKey(blank=True, help_text="Le référent reçoit un mail à chaque fois qu'un produit est approvisionné ou que le stock devient bas. (Sauf si il a choisi de désactiver cette fonctionnalité dans son profil.) ", null=True, on_delete=django.db.models.deletion.SET_NULL, to='base.Member', verbose_name='référent'),
        ),
        migrations.CreateModel(
            name='AchatOp',
            fields=[
                ('changestockop_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='base.ChangeStockOp')),
                ('household', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='base.Household')),
            ],
            bases=('base.changestockop',),
        ),
        migrations.CreateModel(
            name='ApproStockOp',
            fields=[
                ('changestockop_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='base.ChangeStockOp')),
            ],
            bases=('base.changestockop',),
        ),
        migrations.CreateModel(
            name='InventoryOp',
            fields=[
                ('changestockop_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='base.ChangeStockOp')),
            ],
            bases=('base.changestockop',),
        ),
        migrations.AddField(
            model_name='changestockop',
            name='product',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='base.Product'),
        ),
    ]
